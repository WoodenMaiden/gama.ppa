name: Update repository
run-name: Deploy packages to GH pages

on:
  workflow_dispatch: 
    inputs:
      tag:
        description: "Release tag name"
        required: true
        type: string
  workflow_call:
    inputs:
      tag:
        description: "Release tag name"
        required: true
        type: string

env:
  REPOSITORY: gama-platform/gama 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download deb file from ${{ env.REPOSITORY }}
        uses: robinraju/release-downloader@v1.8
        id: download
        with:
          repository: ${{ env.REPOSITORY }}
          tag: ${{ inputs.tag }}
          fileName: "*.deb"
          tarBall: false
          zipBall: false

      - name: Creating the `Packages`, `Packages.gz` and `Release` files
        run: |
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages
          apt-ftparchive release . > Release

      - name: Setup redirections to https://github.com/${{ env.REPOSITORY }}/releases/download/${{ inputs.tag }}
        shell: python
        run: |
          import os
          from string import Template
          
          files = ${{ steps.download.outputs.downloaded_files }}
          mappings = []
          
          for file in files:
              mappings.append(
                  { "repo": "${{env.REPOSITORY}}", "tag": "${{inputs.tag}}", "file": file }
              )
          
          template = Template(open("templates/package_template").read())

          for m in mappings:
              content = template.substitute(**m)
              f = open(f"{m['file']}", "w")
              f.write(content)

      - name: Commit new files
        # Never intended to work as Gama debs are over Github's 100MB limit
        # But it does a good base
        uses: EndBug/add-and-commit@v9
        with:
          add: "."
          author_email: ${{ secrets.BOT_GH_EMAIL }}
          author_name: ${{ secrets.BOT_GH_NAME }}
          committer_name: ${{ secrets.BOT_GH_NAME }}
          committer_email: ${{ secrets.BOT_GH_EMAIL }}
          github_token: ${{ github.token }}
          message: "Update repository with gama ${{ inputs.tag }}"
