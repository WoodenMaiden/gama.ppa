name: Update repository
run-name: Deploy packages to CloudFlare pages

on:
  workflow_dispatch: 
    inputs:
      tag:
        description: "Release tag name"
        required: true
        type: string
  workflow_call:
    inputs:
      tag:
        description: "Release tag name"
        required: true
        type: string

env:
  REPOSITORY: gama-platform/gama 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download deb file from ${{ env.REPOSITORY }}
        uses: robinraju/release-downloader@v1.8
        id: download
        with:
          repository: ${{ env.REPOSITORY }}
          tag: ${{ inputs.tag }}
          fileName: "*.deb"
          tarBall: false
          zipBall: false

      - name: Creating the `Packages`, `Packages.gz` and `Release` files
        run: |

          dpkg-scanpackages --multiversion . > Packages

          echo '${{ steps.download.outputs.downloaded_files }}' | jq -r '.[]' | while read -r f; do 
            echo file: $f
            echo run: sed -i "s|Filename: ./$(basename $f)|Filename: ./$(basename $f).html|g" Packages
            sed -i "s|Filename: ./$(basename $f)|Filename: ./$(basename $f).html|g" Packages
          done


          gzip -k -f Packages
          apt-ftparchive release . > Release

          rm *.deb

      - name: Setup redirections to https://github.com/${{ env.REPOSITORY }}/releases/download/${{ inputs.tag }}
        run: python scripts/setup_redirections.py ${{ env.REPOSITORY }} ${{ inputs.tag }} ${{ steps.download.outputs.downloaded_files }}
          
      - name: Updating index and README
        run: python scripts/setup_index_and_readme.py ${{ inputs.tag }} 

      - name: Commit new files
        uses: EndBug/add-and-commit@v9
        with:
          add: "."
          author_email: ${{ secrets.BOT_GH_EMAIL }}
          author_name: ${{ secrets.BOT_GH_NAME }}
          committer_name: ${{ secrets.BOT_GH_NAME }}
          committer_email: ${{ secrets.BOT_GH_EMAIL }}
          github_token: ${{ github.token }}
          message: "Update repository with gama ${{ inputs.tag }}"
          push: true
